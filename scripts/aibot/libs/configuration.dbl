js_strict(true);

include('cache.dbl');

function Config(file) {
	var db = {'settings': {'global': []}};

	var fname = file || 'global';
	this.reload = function() {
		var cache = Cache.Load(fname + '.config');
		if(cache != undefined) {
			db = cache;
		} else {
			loadXML('global');
			if(fname != 'global') {
				db['settings'][fname] = [];
				loadXML(fname);
			}
			Cache.Save(fname + '.config', db);
		}
	};

	function loadXML(name) {
		var file = 'configs/' + name + '.xml';
		if(!FileTools.exists(file))
			// don't worry about missing configs--we really don't care
			//throw new Error('Configuration not found');
			return;

		var content = '';

		var f = File.open(file, FILE_READ);
		while(!f.eof) content += f.readLine();
		f.close();

		// remove the xml declaration (bug 336551)
		content = content.replace(/^<\?xml\s+version\s*=\s*(["'])[^\1]+\1[^?]*\?>/, '').replace('\r', '', 'g').replace('\n', '', 'g').replace('\t', '', 'g');
		var config = new XML(content);

		// verify that the config is sane
		if(config.name() != 'config' || config.@name != name)
			throw new Error('Configuration name did not match expected name!');

		// iterate the settings and add them by key/value
		for each(var value in config.settings.*) {
			if(value.name() == 'value')
				db['settings'][name][value.@name] = value.toString();
		}
	}

	this.get = function(value, def) {
		if(db['settings'].hasOwnProperty(fname) && db['settings'][fname].hasOwnProperty(value))
			return db['settings'][fname][value];
		else if(db['settings']['global'].hasOwnProperty(value))
			return db['settings']['global'][value];
		return def;
	};

	this.set = function(name, value) {
		// you can only write to your own config, not the global one
		db['settings'][me.name][name] = value;
	};

	this.save = function() {
		var file = 'configs/' + fname + '.xml';
		// build the xml file
		var xml = <config name={fname}>
			<settings>
			</settings>
		</config>;

		for each(var value in db['settings'][fname])
			xml.settings += <value name={value}>{db['settings'][fname][value]}</value>;

			FileTools.writeText(file, xml.toXMLString());
	};

	this.reload();
}
