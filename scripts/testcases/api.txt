Global functions:
getUnit - 
getPath - 
getCollision - 
getMercHP - 
getCursorType - 
getSkillByName - 
getSkillById - 
getLocaleString - 
getTextWidthHeight - 
getThreadPriority - 
getUIFlag - 
getTradeInfo - 
getWaypoint - 
getScript - 
getRoom - 
getParty - 
getPresetUnit - 
getPresetUnits - 
getArea - 
getExits - 
getBaseStat - 
getControl - 
getPlayerFlag - 
getTickCount - 
getInteractedNPC - 

print - 
delay - 
load - 
isIncluded - 
include - 
stop - 
rnd - 
sendCopyData - 
sendDDE - 
keystate - 
addEventListener - 
removeEventListener - 
clearEvent - 
clearAllEvents - 
js_strict - 
version - 
scriptBroadcast - 
sqlite_version - 
dopen - 
debugLog - 
iniread - DEPRECATED - 
iniwrite - DEPRECATED - 
runGC - DEPRECATED - 

submitItem - 
login - 
getLocation - 
getMouseCoords - 
copyUnit - 
clickMap - 
acceptTrade - 
beep - 
clickItem - 
getDistance - 
gold - 
checkCollision - 
playSound - 
quit - 
quitGame - 
say - 
clickParty - 
blockMinimize - 
weaponSwitch - 
transmute - 

md5 - 
sha1 - 
sha256 - 
sha384 -
sha512 - 
md5_file - 
sha1_file - 
sha256_file - 
sha384_file - 
sha512_file - 

me object: NOTE: 'me' is also a Unit, and has all of the properties and functions of a Unit object.
Functions:
setSkill - 

Properties:
account - 
charname - 
diff - 
gamename - 
gamepassword - 
gameserverip - 
gamestarttime - 
gametype - 
itemoncursor - 
ladder - 
ping - 
playertype - 
realm - 
realmshort - 
mercrevivecost - 
runwalk - 
weaponswitch - 
chickenhp - 
chickenmp - 
quitonhostile - 
blockKeys - 
blockMouse - 
screensize - 
windowtitle - 
ingame - 
quitonerror - 
maxgametime - 
debug - 

Unit object:
Functions:
getNext - 
cancel - 
repair - 
useMenu - 
interact - 
getItems - 
getMerc - 
getSkill - 
getParent - 
overhead - 
getFlags - 
getFlag - 
getStat - 
getState - 
getPrice - 
getItem - 
getEnchant - 
shop - 
move - 
getQuest - 
getMinionCount - 

Properties:
type - 
classid - 
mode - 
name - 
act - 
gid - 
x - 
y - 
area - 
hp - 
hpmax - 
mp - 
mpmax - 
stamina - 
staminamax - 
charlvl - 
itemcount - 
owner - 
ownertype - 
spectype - 
direction - 
uniqueid - 
code - 
prefix - 
suffix - 
prefixnum - 
suffixnum - 
fname - 
quality - 
node - 
location - 
sizex - 
sizey - 
itemType - 
description - 
bodylocation - 
ilvl - 
lvlreq - 
objtype - 

Script object:
Properties:
name - 
type - 
running - 
threadid - 

Functions:
getNext - 
pause - 
resume - 
stop - 
send - 

Sandbox object:
Functions:
evaluate - 
include - 
isIncluded - 
clearScope - 

PresetUnit object:
Properties:
type - 
roomx - 
roomy - 
x - 
y - 
id - 

FileTools object:
Static Functions:
remove - string name - remove a file based on name
rename - string oldName, string newName -  rename a file
copy - string original, string copy - copy file 'original' to 'copy'
exists - string path - determines if a file exists or not
readText - string path - open a file in read mode, read the full contents, return it as a string
writeText - string path, object contents, ... - open a file in write mode, write the content parameters into the file, and close it, true if the write succeeded, false if not
appendText - string path, object contents, ... - open a file in append mode, write contents into the file, close it, true if the write succeeded, false if not

File object:
Static Functions:
open - string path, mode [, bool binaryMode [, bool autoflush [, bool lockFile]]] - open the specified file, return a File object, mode = one of the constants of the File object listed below, binaryMode = default setting of file.binaryMode, autoflush = default setting of file.autoflush, lockFile = if true lock the file on open and unlock it on close, so other threads/programs can't open it

Functions:
close - close the current file
reopen - reopen the current file
read - int num - read num amount of characters or bytes from the file, if in non-binary mode this will be null terminated
readLine - read a single line from the file, assuming the line ends with \n or \r\n, throws an exception if the file is in binary mode
readAllLines - read the full contents of the file and split it up into an array of lines, and return the array of lines, throws an exception if the file is in binary mode
readAll - read the full contents of the file and return it as one big string or if in binary mode, array
write - object contents, ... - write the specified byte/strings/objects/array-of-bytes to a file, throws an exception if not all of the parameters could be written to disk
seek - int bytes [, bool isLines [, bool fromStart]] - seek the specified number of bytes, or optionally lines, in the file, optionally from the start of the file, stops at the end of the file
flush - flushes the remaining buffer to disk
reset - seek to the beginning of the file
end - seek to the end of the file

Properties:
readable - can read from the file
writable - can write from the file
seekable - can seek within the file
mode - the mode the file was opened in, one of the FILE_MODE constants of the file object
binaryMode - determines if the file is in binary mode for read operations (write operations happen based on the parameter specified)
autoflush - automatically flush the file buffer after each write, defaults to off
length - the length of the file in bytes
path - the name and path (relative to the scripts/ folder) of the file
position - the current position in the file
eof - determines if the file is at end-of-file or not
accessed - a timestamp representing the last access time/date for the file
created - a timestamp representing the creation time/date for the file
modified - a timestamp representing the last modified time/date for the file

Exit object:
Properties:
x - 
y - 
id - 
type - 
tileid - 

Area object:
Properties:
exits - 
name - 
x - 
xsize - 
y - 
ysize - 
id - 

Directory object:
Functions:
create - 
remove - 
getFiles - 
getDirectories - 

Properties:
name - 

SQLite object:
Functions:
execute - 
query - 
open - 
close - 

Properties:
path - 
statements - 
isOpen - 
lastRowId - 

DBStatement object:
Functions:
getObject - 
getColumnCount - 
getColumnValue - 
getColumnName - 
go - 
next - 
skip - 
reset - 
close - 
bind - 

Properties:
sql - 
ready - 

Room object:
Functions:
getNext - 
reveal - 
getPresetUnits - 
getCollision - 
getNearby - 
getStat - 
getFirst - 
unitInRoom - 

Properties:
number - 
x - 
y - 
xsize - 
ysize - 
subnumber - 
area - 
level - 
correcttomb - 

Party object:
Functions:
getNext - 

Properties:
x - 
y - 
area - 
gid - 
life - 
partyflag - 
partyid - 
name - 
classid - 
level - 

Control object:
Functions:
getNext - 
click - 
setText - 
getText - 

Properties:
text - 
x - 
y - 
xsize - 
ysize - 
state - 
password - 
maxlength - 
type - 
visible - 
cursorpos - 
selectstart - 
selectend - 

Frame object:
Functions:
remove - 

Properties:
x - 
y - 
xsize - 
ysize - 
visible - 
align - 
zorder - 
click - 
hover - 

Box object:
Functions:
remove - 

Properties:
x - 
y - 
xsize - 
ysize - 
visible - 
color - 
opacity - 
align - 
zorder - 
click - 
hover - 

Line object:
Functions:
remove - 

Properties:
x - 
y - 
x2 - 
y2 - 
visible - 
color - 
zorder - 
click - 
hover - 

Text object:
Functions:
remove - 

Properties:
x - 
y - 
color - 
font - 
visible - 
text - 
align - 
zorder - 
click - 
hover - 

Image object:
Functions:
remove - 

Properties:
x - 
y - 
visible - 
location - 
align - 
zorder - 
click - 
hover - 
