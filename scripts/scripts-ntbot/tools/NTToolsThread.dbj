/**
*	@filename	NTToolsThread.dbj
*	
*	@author		kolton (Party Up Script by Darien and Cognac - Christmas 2011, stolen from YAMB)
*
*	@desc		Handles party events, potion drinking, and chickening (via script)
*	@TODO		Add option to allow certain members to loot corpse if in hardcore mode
*	@see		http://www.assembla.com/spaces/bobode/tickets/15
*/

var _NTLW_timerLastDrink = new Array(5);


function main()
{
	include('prototypes/prototypes.js');
	include('config/NTConfig.dbl');
	include("common/NTCommon.js");
	NTC_IncludeConfig();
	
	var _count = 0;
	var _mercHP;
	var _party, _mypartyid;

	print("ÿc3Start ToolsThread script");

	NT_LoadConfig();

	
	/* CORE CHICKEN SETTINGS */
	if(NTConfig_LifeChicken > 0)
	{
		if(parseInt((me.hpmax*NTConfig_LifeChicken)/100) > 5)
		{
			me.chickenhp = parseInt(((me.hpmax*NTConfig_LifeChicken - 5)/100));
		} 
		else
			me.chickenhp = parseInt((me.hpmax*NTConfig_LifeChicken)/100);
	}

	if(NTConfig_ManaChicken > 0)
	{
		if(parseInt((me.mpmax*NTConfig_ManaChicken)/100) > 5)
		{
			me.chickenmp = parseInt(((me.mpmax*NTConfig_ManaChicken - 5)/100));
		}
		else
			me.chickenmp = parseInt((me.mpmax*NTConfig_ManaChicken)/100);
	}
	
	for(var i = 0 ; i < 5 ; i++)
		_NTLW_timerLastDrink[i] = 0;
	
	addEventListener("melife", NT_LifeWatch);
	addEventListener("memana", NT_ManaWatch);
	
	if(NTConfig_PublicMode)
	{
		party();
		addEventListener("gameevent",partyHandler);
		delay(10000);
		var noone = onlyPlayer();
		delay(5000);
		if(!inParty(me) && !onlyPlayer() && !noone)
		{ 
			print("ÿc1 Failed to Party! will leave and come back"); 
			delay(1500); 
			quit(); 
		}
	}
	
	addEventListener("scriptmsg", scriptMessageHandler);
	
	while(me.ingame)
	{
		if(!NTC_InTown())
		{
			_mercHP = getMercHP();

			if(_mercHP > 0)
			{
				if(_mercHP < NTConfig_MercChicken)
				{
					if(NTConfig_TakeScreenshotOnChicken && typeof(takeScreenshot) == 'function')
						takeScreenshot();
					
					print('ÿc9NTBot Quit: Chickened (Merc HP)');
					quit();
					break;
				}

				if(_mercHP < NTConfig_MercRejuvThresh)
					NTLW_DrinkPotInt(4);
				else if(_mercHP < NTConfig_MercLifeThresh)
					NTLW_DrinkPotInt(3);
			}
		}
		delay(200);
	}
}

function NT_LifeWatch(life)
{
	if(life <= parseInt(me.hpmax*NTConfig_LifeThresh/100))
		NTLW_DrinkPotInt(0);
		
	if(life <= parseInt(me.hpmax*NTConfig_LifeRejuvThresh/100))
		NTLW_DrinkPotInt(2);
		
	if(NTConfig_LifeChicken > 0 && life < parseInt(me.hpmax*NTConfig_LifeChicken/100) && !NTC_InTown())
	{
		if(NTConfig_TakeScreenshotOnChicken && typeof(takeScreenshot) == 'function')
			takeScreenshot();
		
		print('ÿc9NTBot Quit: Chickened (HP)');
		quit();
	}
}

function NT_ManaWatch(mana)
{
	if(mana <= parseInt(me.mpmax*NTConfig_ManaThresh/100))
		NTLW_DrinkPotInt(1);
		
	if(mana <= parseInt(me.mpmax*NTConfig_ManaRejuvThresh/100))
		NTLW_DrinkPotInt(2);
		
	if(NTConfig_ManaChicken > 0 && mana < parseInt(me.mpmax*NTConfig_ManaChicken/100) && !NTC_InTown())
	{
		if(NTConfig_TakeScreenshotOnChicken && typeof(takeScreenshot) == 'function')
			takeScreenshot();
		
		print('ÿc9NTBot Quit: Chickened (MP)');
		quit();
	}
}

// Internal functions
function NTLW_DrinkPotInt(type)
{
	var _pottype;
	var _potion;
	var _tNow = new Date();

	if(type != 2 && type != 4)
	{
		if(_NTLW_timerLastDrink[type] && (_tNow-_NTLW_timerLastDrink[type] < 7000))
			return false;
	}
	/*else
	{
		if(_NTLW_timerLastDrink[type] && (_tNow-_NTLW_timerLastDrink[type] < 6000))
			return false;
	}*/
	
	if(me.mode == 0 || me.mode == 17)
		return false;
	
	switch(type)
	{
		case 0:
		case 3:
			_pottype = 76;		
			break;
		case 1:
			_pottype = 77;
			break;
		default:
			_pottype = 78;
			break;
	}
	
	_potion = NTLW_GetPotionInt(_pottype);

	if(_potion)
	{
		if(me.mode == 0 || me.mode == 17)
			return false;
			
		if(type < 3)
			_potion.interact();
		else
			clickItem(2, _potion);
	
		_NTLW_timerLastDrink[type] = new Date();
		
		return true;
	}
	
	return false;
}

function NTLW_GetPotionInt(pottype)
{
	var _items = me.getItems();

	if(!_items)
		return false;

	for(var i = 0 ; i < _items.length ; i++)
	{
		if(_items[i].mode == 2 && _items[i].itemType == pottype)
			return copyUnit(_items[i]);
	}

	return false;
}

function inParty(who) //-getParty(id); id= "playerName" | player.gid | Unit(getUnit)
{
	return getParty(who).partyid != 65535; 
}

function noParty()
{
	var party=getParty();
	if(party)
	{
		do
		{
			if(party.partyid!=65535)
				return false;
		} while(party.getNext());
	}
	return true;
}

function onlyPlayer()
{
	var player = getParty();
	var numPlayers = 0;
	if(player)
	{ 
		do
		{ 
			if(player.name != me.name) 
				numPlayers++; 
		} while (player.getNext()); 
	}
	return (numPlayers ? false : true);
}

function partyHandler(mode,player,param2,name1)
{
	if(NTConfig_PublicMode)
	{
		if(mode==2||(mode==7&&(param2==5||param2==9)))
			party();
	}
}

function scriptMessageHandler(msg)
{
	if (msg.toLowerCase() == "unparty")
	{
		NTConfig_PublicMode = false;
		print("Unpartying")
		if(inParty(me))
		{
			clickParty(getParty(me.name), 3)
		}
	}
	if (msg.toLowerCase() == "party")
	{
		NTConfig_PublicMode = true;
		print("Partying")
		party()
	}
}

function party()
{
	var party=getParty();
	delay(1000);
	if(party)
	{
		do
		{
			if(NTConfig_PublicMode && party.name!=me.name && (party.partyflag==2 && (party.partyid<9||noParty()) || party.partyid==0xFFFF && (inParty(me) || noParty()) && party.partyflag!=4))
			{
				if(party.partyflag==2) 
					print('ÿc3Accepting invite from ÿc4'+party.name);
				else 
					print('ÿc3Inviting ÿc4'+party.name);
				if(party)
					clickParty(party,2);
				delay(250);
			}
			delay(100);
		}while(party&&party.getNext());
	}
}