// Diablo module by Darien
// short and sweet
var clearOutChaos = true; //true to hunt down and kill ALL monsters in Chaos, false to just kill those in range

entryFunc = Diablo;

var myLeader = 0;

function DK_GameMsgHandler(who, msg) {
	var parsedMsg = new Array();
       
    var Firstword = msg.substring(0, msg.indexOf(" "));
    var params = msg.substring(msg.indexOf(" ")+1, msg.length);
     if(!Firstword) {
        Firstword = params;
        params = null
    }
    
    //--code for 3 words -- sloppy
    //var rest = msg.substring(msg.indexOf(" ")+1, msg.length);
    //var Secondword= rest.substring(0, rest.indexOf(" "));
    //var darest = rest.substring(rest.indexOf(" ")+1, rest.length);
    //var Thirdword = darest.substring(0, rest.length);
	
	return GameMsgHandler(who,Firstword,params);
}

function GameMsgHandler(sender, cmd, params, c) {
    //print("Sender " + sender + " cmd: " + cmd + " params: " + params);
    
    var command = cmd.toLowerCase();
    if(params) params = params.toLowerCase();
    
    // The one who yells "tp up" becomes my true leader
    if(command + " " + params == YAM_TPMsg) myLeader = sender;
    
    //the bot will invite when Party Up is said
    if(command == "party" && params == "up") {
        var senderParty = DC_PlayerPresent(sender); 
        if(senderParty.partyid == 65535) clickParty(senderParty, 2);
        else if(senderParty.partyflag & 2) clickParty(senderParty, 2);
    }
    
    // "Darien banishes you" the bot will quit the game
    if(command == "darien" && params == "banishes you") {
        say("Goodbye Master");
        quit();
    }
    
    if(command == "next" && params == "game") {
        delay(10000);
        quit();
    }
}

function Diablo() {
    addEventListener("chatmsg", DK_GameMsgHandler);
    if (me.classid == 1) {
		XP_Static = 8;
		(DXP_SorcSkill.length > 0) ? XP_SetSorcSkills(DXP_SorcSkill,Monster_SorcSkill) : XP_SetSorcSkills(YAM_SorcSkill,Monster_SorcSkill);
		XP_Static = DXP_Static;
		_XP_UseTeleOnImmune = false;
	}
    
    commPather.StepActionflag = DP_CLEARWHENSTUCK|DP_USESHRINES|DP_OPENCHESTS|DP_INCUSERSTEP;
    
    YAM_TownManager();
    
    //Path to Chaos Sanc yourself
    if (!WaitForPortal || YAM_IsLeader) {
    
        YAM_PathToWayPoint();
        // Do precasts before going into the portal
        XP_Precasts();
        // Use the WP to go to the durance 2 wp
        DM_UsePortal("Waypoint",107);
        // Do precasts before pathing
        XP_Precasts();

        //path to Chaos Sanctuary
        pathToLevel(108);
        dprint("Moving across border",1);
        var times = 0;
        while(me.area != 108 && times < 10) { DM_MoveTo(me.x, me.y-10); delay(100); times++; }
        dprint("In Chaos Sanctuary",2);
        
        pathToDest(me.x, me.y-90);
        killZone(20);
        XP_OpenTP();
        say("Chaos Portal is Open Master.  Be careful.");
    } else {
        // Use the WP to Act 4 if need be
		if (me.area != 103) {
			YAM_PathToWayPoint(); 
			DM_UsePortal("Waypoint",103); 
			YAM_InitCommTown(); 
		}
		commTown4.GotoStart();
		DC_Print("Waiting for tp...");
        if(PublicMode < 2) {
            while (me.area != 108) {
                var portal = getUnit(2,"Portal");
                if(portal) { 
                    do {
                        print("portal owner: " + portal.getParent());
                        if(portal.objtype == 108) {
                            var pOwner = portal.getParent();
                            if(pOwner) {
                                if(DC_InMyParty(portal.getParent())) {
                                    myLeader=portal.getParent();
                                    // Do precasts before going into the portal
                                    XP_Precasts();
                                    DM_TakeEntrance(portal);
                                    break;
                                } else { 
                                    var pOwnerParty = DC_PlayerPresent(pOwner);
                                    if(pOwnerParty) {
                                        if(pOwnerParty.partyflag & 2) clickParty(pOwnerParty, 2); 
                                        else { 
                                            say("Party Up"); 
                                            delay(2000); 
                                        }
                                    }
                                    
                                }
                            }
                        }
                    } while (portal.getNext());
                }
                delay(1500);
            }
        } else { // if your leeching wait for leaders portal, only take when directed
            while (me.area != 108) {
                
                // Wait for 4 mins
                var i = 0;
                while (!myLeader && i < 240 && me.area != 108) {
                    delay(1000);
                    i++;
                }
                
                // Do precasts before going into the portal
                XP_Precasts();
                // Make sure to party the leader
                if (!DC_PartyPlayer(myLeader)) {
                    // If failed to party, choose another leader
                    for (var i=0; i < Leaders.length; i++) {
                        if (DC_PartyPlayer(Leaders[i])) { 
                            myLeader=portal.getParent(); 
                            break; 
                        }
                    }
                }
                try {
                    // When we have chosen a leader, go into his tp
                    DM_UsePortal ("BluePortal", 108, myLeader);
                }
                catch (e) { 
                    DC_Print("e : name = " + e.name + ", message = " + e.message);
                }
            }
            YAM_TPReady = false;
        }
    }
    
    if(YAM_IsLeader || PublicMode < 2) {
        pathToDest(7780,5308,clearChaos,killZone);
        killRadius(30);
        if(YAM_IsLeader) {
            XP_OpenTP();
            say("tp up");
            say("Leech Portal is Open Master.  Be careful.");
            DA_UseCTASkills();
        }
    }
    
    killRadius(30);
    
    var GrandVizer = false;
    var LordDeSeis = false;
    var InfectorOfSouls = false;
    
    for(var cid = 396; cid > 391; cid--) {
        if(!pathtoFarUnit(2,cid,108,clearChaos,killZone)) pathtoFarUnit(2,cid,108,clearChaos,killZone);
        openObjectID(cid);
        killRadius(30);
        if(cid >  394 && !GrandVizer)       { if(ambushSpawn("Grand Vizier of Chaos"))  GrandVizer = true;      } //PresetUnit.id = 742 classid = 306
        if(cid == 394)                      { if(ambushSpawn("Lord De Seis"))           LordDeSeis = true;      } //PresetUnit.id = 741 classid = 312
        if(cid <  394 && !InfectorOfSouls)  { if(ambushSpawn("Infector of Souls"))      InfectorOfSouls = true; } //PresetUnit.id = 740 classid = 362
        killRadius(30,null,5);
    }
    
    pathToDest(7795,5265,null,killZone);
    XP_OpenTP();
    pathToDest(7795,5295,null,killZone);
    XP_Precasts(); DA_UseCTASkills();
    if(!ambushSpawn(243)) { // In case Diablo Doesn't appear do a second run on any missed bosses
        if(!GrandVizer)      { if(!pathtoFarUnit(1,306,108,clearChaos,killZone)) pathtoFarUnit(2,396,108,clearChaos,killZone); if(!ambushSpawn(306)) { pathtoFarUnit(2,395,108,clearChaos,killZone); ambushSpawn(306);} }
        if(!LordDeSeis)      { if(!pathtoFarUnit(1,312,108,clearChaos,killZone)) pathtoFarUnit(2,394,108,clearChaos,killZone); ambushSpawn(312); }
        if(!InfectorOfSouls) { if(!pathtoFarUnit(1,362,108,clearChaos,killZone)) pathtoFarUnit(2,393,108,clearChaos,killZone); if(!ambushSpawn(362)) { pathtoFarUnit(2,392,108,clearChaos,killZone); ambushSpawn(362);} }
        pathToDest(7795,5295,killZone);
        ambushSpawn(243);
    }
    DSN_PickItems();
    if(YAM_IsLeader) say("Next Game");
}

function clearChaos() {
    killRadius(30);
    if(clearOutChaos) Search_and_Destroy(60);
    return DP_STEPAHEAD;
}